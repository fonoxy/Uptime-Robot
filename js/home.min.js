var pageUrl = DOMPurify.sanitize(window.location.href.replace(location.search, "").replace(/\/$/, "")),
    favicon = new Favico({
        animation: "popFade",
        position: "up"
    }),
    pspi = $("input#pspi").val();

function callMonitorList(t, a) {
    void 0 === t && (t = 1);
    $.ajax({
        type: "GET",
        url: window.pspApiPath + "?page=" + t,
        dataType: "json",
        cache: !1,
        success: function(s) {
            var o = s.statistics.counts.down,
                i = s.statistics.counts.up,
                n = s.statistics.counts.paused,
                e = (s.statistics.counts.total, s.psp.totalMonitors);
            try {
                var r = localStorage.getItem("PSPStatusUp['" + pspi + "'']") || null,
                    l = localStorage.getItem("PSPStatusDown['" + pspi + "'']") || null;
                localStorage.setItem("PSPStatusUp['" + pspi + "'']", i), localStorage.setItem("PSPStatusDown['" + pspi + "'']", o)
            } catch (t) {
                r = window.oldStatusUp, l = window.oldStatusDown;
                window.oldStatusUp = i, window.oldStatusDown = o
            }
            var d = !1;
            r == i && l == o || (d = !0), $("#totalCount").text(e), $("#upCount").text(i), $("#downCount").text(o), $("#pausedCount").text(n), window.timeZone = s.psp.timezone, $(".psp-main-status-dot").removeClass("is-grey is-error is-warning"), 0 == o && n != e ? $(".psp-main-status").html(trans("common.all_systems") + ' <span class="uk-text-primary">' + trans("common.operational") + "</span>") : 0 == i && 0 == n ? ($(".psp-main-status-dot").addClass("is-error"), $(".psp-main-status").html(trans("common.all_systems") + ' <span class="uk-text-danger">' + trans("common.down") + "</span>"), playAlertSound()) : 0 != o && n != e ? ($(".psp-main-status-dot").addClass("is-warning"), $(".psp-main-status").html(trans("common.some_systems_down")), playAlertSound()) : n == e && ($(".psp-main-status-dot").addClass("is-grey"), $(".psp-main-status").html(trans("common.all_systems") + " " + trans("common.not_monitored")));
            var p = "";
            if (n == e) $(".psp-monitor-list").html('<div class="uk-text-center uk-text-muted"> ' + trans("common.all_systems") + " " + trans("common.paused") + "</div>");
            else {
                var c = s.days;
                if (window.showB) var u = window.innerWidth;
                var m = 90,
                    w = window.compact ? 530 : 880,
                    v = window.compact ? 15 : 30,
                    h = window.compact ? 5.9 : 9.8,
                    g = window.compact ? 3.25 : 6;
                u <= 768 && (m = 30, h = 19.8, g = 12, w = 588, v = window.compact ? 30 : 60), $(".psp-day-number").text(m);
                var f = {},
                    k = [];

                function y(t) {
                    var a = "";
                    if (window.hidePM && "black" == t.statusClass) return a;
                    var s = "",
                        o = "";
                    if (window.showB)
                        for (var i = 90 - m, n = t.dailyRatios, e = i; e < 90; e++) {
                            var r = n[e],
                                l = new Date(c[e]).getTime() / 1e3,
                                d = r.ratio + "%",
                                p = "#3bd671",
                                u = "1";
                            1 == l < t.createdAt - 86400 || "black" == r.label ? (p = "#687790", d = trans("common.no_records")) : r.ratio < 100 && r.ratio >= 99 ? (p = "#3bd671", u = "0.5") : r.ratio < 99 && r.ratio >= 95 ? p = "#f29030" : r.ratio < 95 && (p = "#df484a");
                            var f = DOMPurify.sanitize(c[e]),
                                k = DOMPurify.sanitize(d),
                                y = '                                    <div class="psp-charts uk-margin-small-top uk-flex uk-flex-middle">                                        <svg width="' + w + '" height="' + v + '" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 ' + w + " " + v + '">                                        ' + (o += '<rect height="' + v + '" width="' + g + '" x="' + (e - i) * h + '" y="0" fill="' + p + '" fill-opacity="' + u + '" rx="' + g / 2 + '" ry="' + g / 2 + "\" uk-tooltip=\"<div class='uk-text-muted font-12'>" + f + "</div>                                " + k + '" />') + "                                        </svg>                                    </div>"
                        }
                    if ("success" == t.statusClass ? (s = '<div class="uk-text-primary psp-monitor-row-status-inner" title="' + trans("common.operational") + '"><span class="dot" aria-hidden="true"></span><span class="uk-visible@s">', s += window.compact ? trans("common.up") : trans("common.operational"), s += "</span></div>") : "danger" == t.statusClass ? s = '<div class="uk-text-danger psp-monitor-row-status-inner" title="Down"><span class="dot is-error" aria-hidden="true"></span><span class="uk-visible@s">' + trans("common.down") + "</span></div>" : (s = '<div class="uk-text-muted psp-monitor-row-status-inner" title="Not monitored"><span class="dot is-grey" aria-hidden="true"></span><span class="uk-visible@s">', s += window.compact ? "N/A" : trans("common.not_monitored"), s += "</span></div>"), a += '                            <div class="psp-monitor-row">                                <div class="uk-flex uk-flex-between uk-flex-wrap">', window.compact ? a += '<div class="psp-monitor-row-header uk-text-muted uk-flex uk-flex-auto uk-flex-between">' : a += '<div class="psp-monitor-row-header uk-text-muted uk-flex uk-flex-auto">', window.enableD) {
                        var x = DOMPurify.sanitize(t.name),
                            $ = parseInt(t.monitorId);
                        a += '<a title="' + x + '" class="psp-monitor-name uk-text-truncate uk-display-inline-block" href="'  + "id.html?m=" + $ + '">                                            ' + x + '                                            <svg class="icon icon-plus-square uk-flex-none"><use href="/assets/symbol-defs.svg#icon-arrow-right"></use></svg>                                            </a>'
                    } else {
                        a += '<span class="psp-monitor-name uk-text-truncate uk-display-inline-block">' + (x = DOMPurify.sanitize(t.name)) + "</span>"
                    }
                    if (a += '<div class="uk-flex-none">', window.showUP && (window.compact || (a += '<span class="m-r-5 m-l-5 uk-visible@s">|</span>'), a += '<span class="uk-text-primary uk-visible@s">' + t[m + "dRatio"].ratio + "%</span>"), null !== t.url) {
                        var b = DOMPurify.sanitize(t.type),
                            D = DOMPurify.sanitize(t.url);
                        "Heartbeat" !== t.type ? a += '<svg class="icon icon-help-circle font-12 uk-flex-none uk-visible@s" uk-tooltip title="<div class=\'uk-text-muted font-12\'>' + b + "</div><div class='font-12'>" + D + '</div>"><use href="/assets/symbol-defs.svg#icon-help-circle"></use></svg>' : a += '<svg class="icon icon-help-circle font-12 uk-flex-none" uk-tooltip title="<div class=\'uk-text-muted font-12\'>' + b + '</div>"><use href="/assets/symbol-defs.svg#icon-help-circle"></use></svg>'
                    }
                    return a += '                                            <div class="uk-hidden@s uk-margin-small-left">' + s + "</div>                                        </div>                                    </div>", window.showB && window.compact && (a += y), t.hasIncidentComments && (a += '\n                            <div class="psp-monitor-row-status-has-comments">\n                                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16" width="16" height="16">\n                                    <path d="M2.678 11.894a1 1 0 0 1 .287.801 11 11 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8 8 0 0 0 8 14c3.996 0 7-2.807 7-6s-3.004-6-7-6-7 2.808-7 6c0 1.468.617 2.83 1.678 3.894m-.493 3.905a22 22 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a10 10 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9 9 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105" />\n                                    <path d="M4 5.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8m0 2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5" />\n                                </svg>\n                            </div>'), a += '<div class="psp-monitor-row-status uk-visible@s">' + s + "</div>", window.showUP && (a += '<div class="uk-hidden@s uk-text-primary">' + t["30dRatio"].ratio + "%</div>"), a += "</div>", window.showB && !window.compact && (a += y), a += "</div>"
                }
                window.showMonitorsUnderGroups && $.each(s.psp.monitors, function(t, a) {
                    null !== a.groupId && void 0 !== a.groupId && a.groupName ? (f[a.groupId] || (f[a.groupId] = {
                        groupName: a.groupName,
                        monitors: []
                    }), f[a.groupId].monitors.push(a)) : k.push(a)
                }), window.showMonitorsUnderGroups ? ($.each(f, function(t, a) {
                    var s = DOMPurify.sanitize(a.groupName);
                    p += '<div class="card">', p += '<div class="psp-group-header"><h4>' + s + "</h4></div>", p += '<div class="psp-group-monitors">', $.each(a.monitors, function(t, a) {
                        p += y(a)
                    }), p += "</div></div>"
                }), k.length > 0 && (p += '<div class="card">', p += '<div class="psp-group-monitors">', $.each(k, function(t, a) {
                    p += y(a)
                }), p += "</div></div>")) : (p += '<div class="card">', $.each(s.psp.monitors, function(t, a) {
                    p += y(a)
                }), p += "</div>"), $(".psp-monitor-list").html(p)
            }
            if ($(".psp-monitor-preloader").addClass("uk-hidden"), s.psp.monitors && s.psp.monitors.length > 0) {
                var x = parseInt(s.psp.monitors[0].monitorId);
                $(".psp-calendar-link").attr("href", pageUrl + "/" + x + "/calendar")
            } else $(".psp-calendar-link").attr("href", pageUrl + "/calendar");
            if ($(".psp-history-link").attr("href", pageUrl + "/history"), window.enableD && null !== s.statistics.latest_downtime && window.showO) {
                var b = s.statistics.latest_downtime,
                    D = parseInt(b.monitorID),
                    M = DOMPurify.sanitize(b.ago);
                $(".psp-latest-downtime").html('<a href="' +  "id.html?m=" + D + '#logs">' + trans("common.latest_downtime_title") + "</a> " + trans("common.detected").replace("%s", M) + ".")
            }
            if (0 == window.showO && $(".outage-days").text("30"), a ? (callEventFeed(!1, null, null), initFaviconBadge(o)) : d && (callEventFeed(!0, null, null), initFaviconBadge(o)), s.psp.totalMonitors > s.psp.perPage) {
                var P = Math.ceil(s.psp.totalMonitors / s.psp.perPage),
                    C = 50,
                    S = 1,
                    I = '<ul class="uk-pagination uk-flex-center">',
                    U = t,
                    _ = U + 1,
                    z = 1 == U ? "uk-disabled" : "";
                I += '<li class="' + z + '"><a href="#" data-page="1">«</a></li>', I += '<li class="' + z + '"><a href="#" data-page="' + (1 == U ? 1 : U - 1) + '">&lsaquo;</a></li>', P < C ? C = P : U > 5 && (C = (S = U - 5) + (C - 1)) > P && (C = P);
                for (var T = S; T <= C; T++) {
                    I += '<li class="' + (U == T ? "uk-active" : "") + '"><a href="#" data-page="' + T + '">' + T + "</a></li>"
                }
                I += '<li class="' + (z = U == P ? "uk-disabled" : "") + '"><a href="#" data-page="' + _ + '">&rsaquo;</a></li>', I += '<li class="' + z + '"><a href="#" data-page="' + P + '">»</a></ul>', $(".psp-monitor-pagination").html(I)
            }
            if (s.statistics.uptime) {
                var O = 1;
                $.each(s.statistics.uptime, function(t, a) {
                    $("#overall-uptime div:nth-child(" + O + ") h3").addClass(a.label).html(a.ratio + "%"), O++
                })
            }
        },
        error: function(t) {}
    })
}

function initFaviconBadge(t) {
    t > 0 ? favicon.badge(t) : favicon.reset()
}

function formatLocalizedDate() {
    $(".date-to-localize").each(function() {
        const t = $(this),
            a = t.data("timezone") || window.timeZone,
            s = t.data("day"),
            o = t.data("month") - 1,
            i = t.data("year"),
            n = t.data("hour"),
            e = t.data("minute"),
            r = t.data("gmt-day"),
            l = t.data("gmt-month") - 1,
            d = t.data("gmt-year"),
            p = t.data("gmt-hour"),
            c = t.data("gmt-minute");
        try {
            const u = trans("common.language_encode_short"),
                m = new Date(Date.UTC(i, o, s, n, e)),
                w = new Date(Date.UTC(d, l, r, p, c)),
                v = m.toLocaleString(u || "en", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                    hour: "2-digit",
                    minute: "2-digit",
                    hour12: !1,
                    timeZone: "UTC"
                }),
                h = w.toLocaleString(u || "en", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                    hour: "2-digit",
                    minute: "2-digit",
                    hour12: !1,
                    timeZone: "UTC"
                });
            t.text(v + " GMT" + a), t.attr("uk-tooltip", ""), t.attr("title", h + " GMT")
        } catch (t) {}
    })
}
$(function() {
    setInterval(countdown, 1e3);
    $(".last-updated").text((new Date).toLocaleTimeString()), callMonitorList(1, !0), setTimeout(formatLocalizedDate, 100), $(".psp-monitor-pagination").on("click", "a", function(t) {
        $(".psp-monitor-list").html(""), $(".psp-monitor-preloader").removeClass("uk-hidden"), t.preventDefault();
        var a = parseInt($(this).data("page"));
        return $(".psp-monitor-pagination").attr("data-page", a), callMonitorList(a, !1), $("html, body").animate({
            scrollTop: $("#monitors").offset().top - 50
        }, 200), !1
    })
});
//# sourceMappingURL=home.min.js.map